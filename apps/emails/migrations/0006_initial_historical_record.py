# Generated by Django 3.2.5 on 2022-02-17 12:34

from django.db import migrations
from django.utils.timezone import now


HISTORY_TYPE_CHANGE = "~"


def create_initial_historicalrecord(apps, schema_editor):
    """
    Create an initial edit for each model with a relation to HistoricalRecord.

    Originally, when we added the relation to django_simple_history's HistoricalRecords,
    we realized that the diff for the first subsequent change on a model didn't
    end up being shown in a meanigful way in the Django admin, because it had no
    previous change to create a diff against. In order for all changes (including
    the first) to have a meaningful diff, we create an initial HistoricalRecord
    for all instances of the model.
    """
    PageEmailTemplate = apps.get_model("emails", "PageEmailTemplate")
    HistoricalPageEmailTemplate = apps.get_model("emails", "HistoricalPageEmailTemplate")
    for page_email_template in PageEmailTemplate.objects.all():
        HistoricalPageEmailTemplate.objects.create(
            # Fields copied from PageEmailTemplate object.
            id=page_email_template.id,
            identifier=page_email_template.identifier,
            template_type=page_email_template.template_type,
            schema=page_email_template.schema,
            # Historical fields.
            history_date=now(),
            history_type=HISTORY_TYPE_CHANGE,
            history_user_id=None,
            history_change_reason="Initial change",
        )


class Migration(migrations.Migration):

    dependencies = [
        ("emails", "0005_track_model_history"),
    ]

    operations = [migrations.RunPython(create_initial_historicalrecord, reverse_code=migrations.RunPython.noop)]
