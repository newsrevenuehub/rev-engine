# Generated by Django 3.2.5 on 2022-02-23 18:37

from django.db import migrations
from django.utils.timezone import now


HISTORY_TYPE_CHANGE = "~"


def create_initial_historicalrecord(apps, schema_editor):
    """
    Create an initial edit for each model with a relation to HistoricalRecord.

    Originally, when we added the relation to django_simple_history's HistoricalRecords,
    we realized that the diff for the first subsequent change on a model didn't
    end up being shown in a meanigful way in the Django admin, because it had no
    previous change to create a diff against. In order for all changes (including
    the first) to have a meaningful diff, we create an initial HistoricalRecord
    for all instances of the model.
    """
    Template = apps.get_model("pages", "Template")
    HistoricalTemplate = apps.get_model("pages", "HistoricalTemplate")

    DonationPage = apps.get_model("pages", "DonationPage")
    HistoricalDonationPage = apps.get_model("pages", "HistoricalDonationPage")

    Style = apps.get_model("pages", "Style")
    HistoricalStyle = apps.get_model("pages", "HistoricalStyle")

    Font = apps.get_model("pages", "Font")
    HistoricalFont = apps.get_model("pages", "HistoricalFont")

    for template in Template.objects.all():
        HistoricalTemplate.objects.create(
            # Fields copied from Template object.
            id=template.id,
            created=template.created,
            modified=template.modified,
            name=template.name,
            heading=template.heading,
            graphic=template.graphic,
            header_bg_image=template.header_bg_image,
            header_logo=template.header_logo,
            header_link=template.header_link,
            sidebar_elements=template.sidebar_elements,
            styles_id=template.styles_id,
            thank_you_redirect=template.thank_you_redirect,
            post_thank_you_redirect=template.post_thank_you_redirect,
            revenue_program_id=template.revenue_program_id,
            elements=template.elements,
            # Historical fields.
            history_date=now(),
            history_type=HISTORY_TYPE_CHANGE,
            history_user_id=None,
            history_change_reason="Initial change",
        )

    for donation_page in DonationPage.objects.all():
        HistoricalDonationPage.objects.create(
            # Fields copied from DonationPage object.
            id=donation_page.id,
            created=donation_page.created,
            modified=donation_page.modified,
            deleted=donation_page.deleted,
            name=donation_page.name,
            heading=donation_page.heading,
            graphic=donation_page.graphic,
            header_bg_image=donation_page.header_bg_image,
            header_logo=donation_page.header_logo,
            header_link=donation_page.header_link,
            sidebar_elements=donation_page.sidebar_elements,
            styles_id=donation_page.styles_id,
            thank_you_redirect=donation_page.thank_you_redirect,
            post_thank_you_redirect=donation_page.post_thank_you_redirect,
            revenue_program_id=donation_page.revenue_program_id,
            elements=donation_page.elements,
            slug=donation_page.slug,
            published_date=donation_page.published_date,
            page_screenshot=donation_page.page_screenshot,
            # Historical fields.
            history_date=now(),
            history_type=HISTORY_TYPE_CHANGE,
            history_user_id=None,
            history_change_reason="Initial change",
        )

    for style in Style.objects.all():
        HistoricalStyle.objects.create(
            # Fields copied from Style object.
            id=style.id,
            created=style.created,
            modified=style.modified,
            deleted=style.deleted,
            name=style.name,
            organization_id=style.organization_id,
            styles=style.styles,
            # Historical fields.
            history_date=now(),
            history_type=HISTORY_TYPE_CHANGE,
            history_user_id=None,
            history_change_reason="Initial change",
        )

    for font in Font.objects.all():
        HistoricalFont.objects.create(
            # Fields copied from Font object.
            id=font.id,
            name=font.name,
            source=font.source,
            font_name=font.font_name,
            accessor=font.accessor,
            # Historical fields.
            history_date=now(),
            history_type=HISTORY_TYPE_CHANGE,
            history_user_id=None,
            history_change_reason="Initial change",
        )


class Migration(migrations.Migration):

    dependencies = [
        ("pages", "0043_auto_20220223_1834"),
    ]

    operations = [migrations.RunPython(create_initial_historicalrecord, reverse_code=migrations.RunPython.noop)]
