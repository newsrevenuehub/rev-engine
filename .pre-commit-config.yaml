# See https://pre-commit.com for more information
repos:
  # Potpourri of hooks provided by github.
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-docstring-first
      - id: check-json
        exclude: docs/dev
      - id: check-merge-conflict
      - id: check-shebang-scripts-are-executable
      - id: check-xml
      - id: check-toml
      - id: check-yaml
        exclude: (deploy/host_vars|deploy/stack|deploy)
      - id: debug-statements
      - id: detect-aws-credentials
        args: [--allow-missing-credentials]
      - id: detect-private-key
      - id: end-of-file-fixer
        exclude: revengine/static/apple-developer-merchantid-domain-association
      - id: trailing-whitespace
  # Python security checks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.6
    hooks:
      - id: bandit
        args: ["--severity-level=high", "--confidence-level=medium", "-c", "pyproject.toml", "-r", "."]
        additional_dependencies: ["bandit[toml]"]
        types: [python]
  # Black code formatter.
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.10
  # Python import sorter.
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", "--filter-files"]
        exclude: ^.*\b(migrations)\b.*$
  # Pythonic checks.
  - repo: https://github.com/PyCQA/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        exclude: docs|migrations|node_modules
        additional_dependencies:
          - "flake8-logging==1.3.1"
  # # Pylint code checks.
  # # "local" because pylint needs all packages to dynamically import.
  # - repo: local
  #   hooks:
  #     - id: pylint
  #       name: pylint
  #       entry: pylint
  #       language: system
  #       types: [python]
  #       require_serial: true
  # Check Python dependencies against p0wned package database.
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        files: pyproject.toml
        args: ["--ignore=60956"]  # Django upgrade >=3.2.21 https://pyup.io/v/60956/f17
  # Checks no secrets in code.
  - repo: https://github.com/thoughtworks/talisman
    rev: v1.31.0
    hooks:
      - id: talisman-commit
        entry: bash -c 'if [ -n "${TALISMAN_HOME:-}" ]; then ${TALISMAN_HOME}/talisman_hook_script pre-commit; else echo "TALISMAN does not exist. Consider installing from https://github.com/thoughtworks/talisman . If you already have talisman installed, please ensure TALISMAN_HOME variable is set to where talisman_hook_script resides, for example, TALISMAN_HOME=${HOME}/.talisman/bin"; fi'
  # JS formater.
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        types_or: [javascript, ts, tsx]
  # JS code linter.
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.55.0
    hooks:
      - id: eslint
        files: \.[jt]sx?$ # *.js, *.jsx, *.ts and *.tsx
        types: [file]
        args: ["--config", "spa/.eslintrc.json", "spa/src"]
        additional_dependencies:
          - "@typescript-eslint/parser@^5.54.0"
          - "@typescript-eslint/eslint-plugin@^5.54.0"
          - eslint@8.52.0
          - eslint-config-prettier@^8.8.0
          - eslint-plugin-chai-friendly@^0.7.2
          - eslint-plugin-cypress@^2.13.3
          - eslint-plugin-jest@^27.6.0
          - eslint-plugin-jsx-a11y@^6.8.0
          - eslint-plugin-react@^7.33.2
          - eslint-plugin-react-hooks@^4.6.0
          - eslint-plugin-testing-library@^6.1.0
  # TODO: DEV-1763 Disabled as it complains that `FROM base AS deploy needs to specific tag, but opinions vary.
  # # Docker file formatter/checker.
  # - repo: https://github.com/pryorda/dockerfilelint-precommit-hooks
  #   rev: v0.1.0
  #   hooks:
  #     - id: dockerfilelint
  #       stages: [commit]
