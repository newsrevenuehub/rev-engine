# Generated by Django 3.2.2 on 2021-05-17 18:52

from django.db import migrations


CELERY_TASK = "apps.contributions.tasks.auto_accept_flagged_contributions"
NAME = "Auto-accept flagged contributions"


def create_or_update_task(apps, schema_editor):
    """
    Create or update a scheduled celery task for accepting flagged contributions based on their flagged_date.
    """
    IntervalSchedule = apps.get_model("django_celery_beat", "IntervalSchedule")
    PeriodicTask = apps.get_model("django_celery_beat", "PeriodicTask")
    interval, _ = IntervalSchedule.objects.get_or_create(every=6, period="hours")
    PeriodicTask.objects.update_or_create(
        task=CELERY_TASK,
        name=NAME,
        defaults=dict(interval=interval),
    )


def remove_task(apps, schema_editor):
    """Delete the task, if it exists."""
    PeriodicTask = apps.get_model("django_celery_beat", "PeriodicTask")
    try:
        PeriodicTask.objects.get(task=CELERY_TASK, name=NAME).delete()
    except PeriodicTask.DoesNotExist:
        pass


class Migration(migrations.Migration):

    dependencies = [
        ("contributions", "0006_contribution_flagged_date"),
    ]

    operations = [migrations.RunPython(create_or_update_task, reverse_code=remove_task)]
