# Generated by Django 3.2.5 on 2022-02-17 12:34

from django.db import migrations
from django.utils.timezone import now


HISTORY_TYPE_CHANGE = "~"


def create_initial_historicalrecord(apps, schema_editor):
    """
    Create an initial edit for each model with a relation to HistoricalRecord.

    Originally, when we added the relation to django_simple_history's HistoricalRecords,
    we realized that the diff for the first subsequent change on a model didn't
    end up being shown in a meanigful way in the Django admin, because it had no
    previous change to create a diff against. In order for all changes (including
    the first) to have a meaningful diff, we create an initial HistoricalRecord
    for all instances of the model.
    """
    DenyListWord = apps.get_model("config", "DenyListWord")
    HistoricalDenyListWord = apps.get_model("config", "HistoricalDenyListWord")
    for deny_list_word in DenyListWord.objects.all():
        HistoricalDenyListWord.objects.create(
            id=deny_list_word.id,
            word=deny_list_word.word,
            history_date=now(),
            history_type=HISTORY_TYPE_CHANGE,
            history_user_id=None,
            history_change_reason="Initial change",
        )


class Migration(migrations.Migration):

    dependencies = [
        ("config", "0003_track_model_history"),
    ]

    operations = [migrations.RunPython(create_initial_historicalrecord, reverse_code=migrations.RunPython.noop)]
