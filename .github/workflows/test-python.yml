name: Build and Test Python

on:
  pull_request:
  push:
    branches: [main, develop]

jobs:
  # Only run if Django code has changed
  check-changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      django: ${{ steps.filter.outputs.django }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            django:
              - 'apps/**'
              - 'public/**'
              - 'revengine/**'
              - 'conftest.py'
              - 'manage.py'
              - 'poetry.lock'
              - 'pyproject.toml'
              - 'pytest.ini'
  build_test_python:
    needs: check-changes
    if: ${{ needs['check-changes'].outputs.django == 'true' }}
    runs-on: ubuntu-latest
    services:
      postgres:
        # From:
        # https://docs.github.com/en/actions/guides/creating-postgresql-service-containers
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
      - name: Install correct Python version
        run: uv python install 3.10

      # load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-uv-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key:
            venv-${{ runner.os }}-${{ hashFiles('**/uv.lock') }}

            #----------------------------------------------
      #  Create virtual environment if cache does not exist
      #----------------------------------------------
      - name: Create virtual environment
        if: steps.cached-uv-dependencies.outputs.cache-hit != 'true'
        run: uv venv -p python3 .venv

      #----------------------------------------------
      # Sync dependencies using uv
      #----------------------------------------------
      - name: Sync dependencies
        run: uv sync

      - name: Run tests
        run: |
          source .venv/bin/activate
          touch .env
          make run-tests
        env:
          DJANGO_SETTINGS_MODULE: revengine.settings.dev
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/postgres
          GS_CREDENTIALS_RAISE_ERROR_IF_UNSET: "false"
