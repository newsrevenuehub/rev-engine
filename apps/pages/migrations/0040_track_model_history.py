# Generated by Django 3.2.5 on 2022-02-04 19:01

import apps.config.validators
import apps.pages.defaults
import apps.pages.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        (
            "organizations",
            "0047_track_model_history",
        ),
        ("pages", "0039_auto_20220207_1645"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalTemplate",
            fields=[
                ("id", models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID")),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        db_index=True, default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        db_index=True, default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("heading", models.CharField(blank=True, max_length=255)),
                ("graphic", models.TextField(blank=True, max_length=100, null=True)),
                ("header_bg_image", models.TextField(blank=True, max_length=100, null=True)),
                ("header_logo", models.TextField(blank=True, default=None, max_length=100, null=True)),
                ("header_link", models.URLField(blank=True)),
                ("sidebar_elements", models.JSONField(blank=True, default=list, null=True)),
                (
                    "thank_you_redirect",
                    models.URLField(
                        blank=True,
                        help_text="If not using default Thank You page, add link to orgs Thank You page here",
                    ),
                ),
                (
                    "post_thank_you_redirect",
                    models.URLField(
                        blank=True,
                        help_text='Donors can click a link to go "back to the news" after viewing the default thank you page',
                    ),
                ),
                ("elements", models.JSONField(blank=True, default=list, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="organizations.organization",
                    ),
                ),
                (
                    "styles",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pages.style",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical template",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalStyle",
            fields=[
                ("id", models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID")),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        db_index=True, default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        db_index=True, default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                ("deleted", models.DateTimeField(editable=False, null=True)),
                ("name", models.CharField(max_length=50)),
                ("styles", models.JSONField(validators=[apps.pages.validators.style_validator])),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="organizations.organization",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical style",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalFont",
            fields=[
                ("id", models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID")),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="This is how the font will be displayed in the Org admin",
                        max_length=255,
                    ),
                ),
                (
                    "source",
                    models.CharField(choices=[("typekit", "Typekit"), ("google", "Google fonts")], max_length=7),
                ),
                (
                    "font_name",
                    models.CharField(
                        db_index=True, help_text="This is the name by which CSS will use the font", max_length=255
                    ),
                ),
                (
                    "accessor",
                    models.CharField(
                        help_text="For typekit fonts, use the kitId. For google fonts, use the value of the 'family' query param",
                        max_length=255,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical font",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDonationPage",
            fields=[
                ("id", models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name="ID")),
                (
                    "created",
                    model_utils.fields.AutoCreatedField(
                        db_index=True, default=django.utils.timezone.now, editable=False, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    model_utils.fields.AutoLastModifiedField(
                        db_index=True, default=django.utils.timezone.now, editable=False, verbose_name="modified"
                    ),
                ),
                ("deleted", models.DateTimeField(editable=False, null=True)),
                ("name", models.CharField(max_length=255)),
                ("heading", models.CharField(blank=True, max_length=255)),
                ("graphic", models.TextField(blank=True, max_length=100, null=True)),
                ("header_bg_image", models.TextField(blank=True, max_length=100, null=True)),
                ("header_logo", models.TextField(blank=True, default=None, max_length=100, null=True)),
                ("header_link", models.URLField(blank=True)),
                ("sidebar_elements", models.JSONField(blank=True, default=list, null=True)),
                (
                    "thank_you_redirect",
                    models.URLField(
                        blank=True,
                        help_text="If not using default Thank You page, add link to orgs Thank You page here",
                    ),
                ),
                (
                    "post_thank_you_redirect",
                    models.URLField(
                        blank=True,
                        help_text='Donors can click a link to go "back to the news" after viewing the default thank you page',
                    ),
                ),
                (
                    "elements",
                    models.JSONField(blank=True, default=apps.pages.defaults.get_default_page_elements, null=True),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        error_messages={"unique": "This slug is already in use on this Revenue Program"},
                        help_text="If not entered, it will be built from the Page name",
                        validators=[apps.config.validators.validate_slug_against_denylist],
                    ),
                ),
                ("published_date", models.DateTimeField(blank=True, null=True)),
                ("page_screenshot", models.TextField(blank=True, max_length=100, null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")], max_length=1),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="organizations.organization",
                    ),
                ),
                (
                    "revenue_program",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="organizations.revenueprogram",
                    ),
                ),
                (
                    "styles",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="pages.style",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical donation page",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
